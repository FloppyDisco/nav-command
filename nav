# |------------------------------------|
# |        nav commandline tool        |
# |------------------------------------|


#   verify files was succersfully set to your filepath
# ------------------------------------------------------
#     /Users/user-name/some/filepath/to/nav-command/
# ---------------------------------------------------------------------------------
files=/Users/user-name/some/filepath/to/nav-command/
# ---------------------------------------------------------------------------------


#   default values
# ------------------
path=`PWD`
command="save"
shortcut=""

# |---------------------------|
# |        Handle Args        |
# |---------------------------|


show_help() {
    echo "Usage: nav [options?][name]"
    echo "Options:"
    echo " > -s | --save   | save   [name]  - Save shortcut [name]"
    echo " > -d | --delete | delete [name]  - Delete shortcut [name]"
    echo " > -p | --path   | path   [path]  - Set [filepath] for the shortcut"
    echo " > -o | --open   | open           - Open nav-command directory"
    echo " > -h | --help   | help           - Display help message"
    echo
    echo "if [name] is the only argument passed, the default is to save the shortcut [name] with path=PWD"
    exit 0
}

list_shortcuts() {
  local files_exist=0
  # Check if any shortcut files exist
  ls -1 $files*.nav >/dev/null 2>&1 || files_exist=1

  if [[ $files_exist -eq 0 ]]; then
    echo
    echo "  Here is a list of all your shortcuts:"
    echo "----------------------------------------"
    ls -1 $files*.nav | xargs -n1 basename -s .nav | sed "s~^~=> ~"
  else
    echo "No shortcuts found."
  fi
  exit 0
}


while [[ $# -gt 0 ]]
do case $1 in

-s | --save | save)
shortcut="$2"
shift;;

-d | --delete | delete)
command="delete"
shortcut="$2"
shift;;

-p | --path | path)
path="$2"
shift;;

-l | --list | list)
  list_shortcuts;;

-o | --open | open)
  echo opening nav command...
  code $files
  exit 0;;

-h | --help | help )
show_help;;

* )
shortcut="$1"
;;

esac
shift
done

#   delete
# ----------

if [[ $command == delete ]]; then
  if [ -f $files$shortcut.nav ]
  then
    rm $files$shortcut.nav
    echo "[nav] $shortcut deleted"
    exit 0
  else
    echo $shortcut does not exist
  fi
fi


#   Save
# --------

# change logic to check if path starts with .
# change logic to check if path starts with ~

echo "cd \"$path\"" >> $files$shortcut.nav
