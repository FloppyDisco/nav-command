# |------------------------------------|
# |        nav commandline tool        |
# |------------------------------------|


#   Check that "files" = the filepath where nav-command is stored on your machine
#    - it should start with your home folder and end in /nav-command/
# ---------------------------------------------------------------------------------
files=/Users/joshuapaul/01_code/04_scripts/nav-command/
# ---------------------------------------------------------------------------------


#   default values
# ------------------
path=`PWD`
command="save"
shortcut=""

# |---------------------------|
# |        Handle Args        |
# |---------------------------|


show_help() {
    echo "Usage: nav [options?][name]"
    echo "Options:"
    echo " > -s | --save   | save   [name]  - Save shortcut [name]"
    echo " > -d | --delete | delete [name]  - Delete shortcut [name]"
    echo " > -p | --path   | path   [path]  - Set [filepath] for the shortcut"
    echo " > -o | --open   | open           - Open nav-command directory"
    echo " > -h | --help   | help           - Display help message"
    echo
    echo "if [name] is the only argument passed, the default is to save the shortcut [name] with path=PWD"
}
while [[ $# -gt 0 ]]
do case $1 in

-o | --open | open)
command="open"
shift;;

-d | --delete | delete)
command="delete"
shortcut="$2"
shift;;

-p | --path | path)
path="$2"
shift;;

-s | --save | save)
shortcut="$2"
shift;;

-h | --help | help )
show_help;;

* )
shortcut="$1"
;;

*)
shortcut="$1"
;;

esac
shift
done

#   delete
# ----------

if [[ $command == delete ]]
then
  if [ -f $files$shortcut.nav ]
  then
    rm $files$shortcut.nav
    echo "[nav] $shortcut deleted"
    exit
  else
    echo $shortcut does not exist
  fi
fi

#   open
# --------

if [[ $command == open ]]
then
  echo opening nav command...
  code $files
  exit
fi


# |------------------------------------|
# |        Create Shortcut File        |
# |------------------------------------|

# change logic to check if path starts with .
# change logic to check if path starts with ~


echo "cd $path" >> $files$shortcut.nav
